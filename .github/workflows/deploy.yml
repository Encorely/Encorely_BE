name: Deploy to EC2

on:
  push:
    branches: [ main, develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      EC2_USER: ubuntu
      EC2_KEY: ${{ secrets.EC2_KEY }}
      EC2_MAIN_HOST: ${{ secrets.EC2_MAIN_HOST }}
      EC2_DEV_HOST: ${{ secrets.EC2_DEV_HOST }}
      APPLICATION_YML_PROD: ${{ secrets.APPLICATION_YML_PROD }}
      APPLICATION_YML_DEV: ${{ secrets.APPLICATION_YML_DEV }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set deployment variables
        id: vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "HOST=${EC2_MAIN_HOST}" >> "$GITHUB_ENV"
            echo "DOCKER_YML=docker-compose.prod.yml" >> "$GITHUB_ENV"
            echo "${APPLICATION_YML_PROD}" > yml.txt
          else
            echo "HOST=${EC2_DEV_HOST}" >> "$GITHUB_ENV"
            echo "DOCKER_YML=docker-compose.develop.yml" >> "$GITHUB_ENV"
            echo "${APPLICATION_YML_DEV}" > yml.txt
          fi

      - name: Create PEM file
        run: |
          echo "$EC2_KEY" | base64 -d > ec2-key.pem
          chmod 600 ec2-key.pem

      - name: Send code and application.yml.b64 to EC2
        run: |
          rsync -av --exclude='.git' -e "ssh -i ec2-key.pem -o StrictHostKeyChecking=no" ./ $EC2_USER@$HOST:/home/ubuntu/app/
          scp -i ec2-key.pem -o StrictHostKeyChecking=no yml.txt $EC2_USER@$HOST:/home/ubuntu/app/application.yml.b64

      - name: Build and restart container on EC2
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$HOST << EOF
            set -e
            cd /home/ubuntu/app
            mkdir -p src/main/resources
            base64 -d application.yml.b64 > src/main/resources/application.yml
            chmod +x ./gradlew
            ./gradlew build --no-daemon
            docker-compose -f /home/ubuntu/app/$DOCKER_YML down
            docker-compose -f /home/ubuntu/app/$DOCKER_YML up --build -d
          EOF

